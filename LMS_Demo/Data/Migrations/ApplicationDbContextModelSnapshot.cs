// <auto-generated />
using System;
using LMS_Demo.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace LMS_Demo.Data.Migrations
{
    [DbContext(typeof(ApplicationDBContext))]
    partial class ApplicationDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.17")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("LMS_Demo.Data.ApplicationUser", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("FirstName")
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("LastName")
                        .HasColumnType("nvarchar(100)");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("NormalizedEmail")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedUserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("bit");

                    b.Property<string>("User")
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("UserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedEmail")
                        .HasDatabaseName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasDatabaseName("UserNameIndex")
                        .HasFilter("[NormalizedUserName] IS NOT NULL");

                    b.ToTable("AspNetUsers");
                });

            modelBuilder.Entity("LMS_Demo.Models.Account", b =>
                {
                    b.Property<int>("SysId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<int?>("FacilitatorID")
                        .HasColumnType("int");

                    b.Property<int?>("IsDeleted")
                        .HasColumnType("int");

                    b.Property<string>("Password")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("RoleID")
                        .HasColumnType("int");

                    b.Property<string>("Salt")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("StudentID")
                        .HasColumnType("int");

                    b.HasKey("SysId");

                    b.HasIndex("FacilitatorID");

                    b.HasIndex("StudentID");

                    b.ToTable("Accounts");
                });

            modelBuilder.Entity("LMS_Demo.Models.Assesment", b =>
                {
                    b.Property<int>("SysId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("AssesmentTypeSysId")
                        .HasColumnType("int");

                    b.Property<string>("Attachment")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("CourseID")
                        .HasColumnType("int");

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("DeadLine")
                        .HasColumnType("datetime2");

                    b.Property<int?>("DepartmentID")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("FacilitatorSysId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("GivenDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("IsDeleted")
                        .HasColumnType("int");

                    b.Property<int?>("SectionID")
                        .HasColumnType("int");

                    b.Property<TimeSpan?>("Time")
                        .HasColumnType("time");

                    b.Property<string>("Title")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TotalMark")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("Type")
                        .HasColumnType("int");

                    b.Property<int?>("YearID")
                        .HasColumnType("int");

                    b.HasKey("SysId");

                    b.HasIndex("AssesmentTypeSysId");

                    b.HasIndex("CourseID");

                    b.HasIndex("DepartmentID");

                    b.HasIndex("FacilitatorSysId");

                    b.HasIndex("SectionID");

                    b.HasIndex("YearID");

                    b.ToTable("Assesments");
                });

            modelBuilder.Entity("LMS_Demo.Models.AssesmentType", b =>
                {
                    b.Property<int>("SysId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("SysId");

                    b.ToTable("AssesmentTypes");
                });

            modelBuilder.Entity("LMS_Demo.Models.Course", b =>
                {
                    b.Property<int>("SysId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<int?>("DepartmentID")
                        .HasColumnType("int");

                    b.Property<int?>("FacilitatorSysId")
                        .HasColumnType("int");

                    b.Property<int?>("IsDeleted")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("YearId")
                        .HasColumnType("int");

                    b.HasKey("SysId");

                    b.HasIndex("DepartmentID");

                    b.HasIndex("FacilitatorSysId");

                    b.HasIndex("YearId");

                    b.ToTable("Courses");
                });

            modelBuilder.Entity("LMS_Demo.Models.Department", b =>
                {
                    b.Property<int>("SysId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("SysId");

                    b.ToTable("Departments");
                });

            modelBuilder.Entity("LMS_Demo.Models.Facilitator", b =>
                {
                    b.Property<int>("SysId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FirstName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FullName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("IsDeleted")
                        .HasColumnType("int");

                    b.Property<string>("LastName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Photo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("Role")
                        .HasColumnType("int");

                    b.HasKey("SysId");

                    b.ToTable("Facilitators");
                });

            modelBuilder.Entity("LMS_Demo.Models.Message", b =>
                {
                    b.Property<int>("SysId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Body")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("FacilitatorSysId")
                        .HasColumnType("int");

                    b.Property<string>("From")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("IsDeleted")
                        .HasColumnType("int");

                    b.Property<DateTime?>("SentDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("Status")
                        .HasColumnType("int");

                    b.Property<int?>("StudentSysId")
                        .HasColumnType("int");

                    b.Property<string>("Subject")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("ToFacilitator")
                        .HasColumnType("int");

                    b.Property<int?>("ToStudents")
                        .HasColumnType("int");

                    b.HasKey("SysId");

                    b.HasIndex("FacilitatorSysId");

                    b.HasIndex("StudentSysId");

                    b.ToTable("Messages");
                });

            modelBuilder.Entity("LMS_Demo.Models.Result", b =>
                {
                    b.Property<int>("SysId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("AssesmentSysId")
                        .HasColumnType("int");

                    b.Property<int?>("AssessmentID")
                        .HasColumnType("int");

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<int?>("FacilitatorSysId")
                        .HasColumnType("int");

                    b.Property<int?>("IsDeleted")
                        .HasColumnType("int");

                    b.Property<string>("Mark")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("StudentID")
                        .HasColumnType("int");

                    b.HasKey("SysId");

                    b.HasIndex("AssesmentSysId");

                    b.HasIndex("FacilitatorSysId");

                    b.HasIndex("StudentID");

                    b.ToTable("Results");
                });

            modelBuilder.Entity("LMS_Demo.Models.Section", b =>
                {
                    b.Property<int>("SysId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<int?>("IsDeleted")
                        .HasColumnType("int");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("YearId")
                        .HasColumnType("int");

                    b.HasKey("SysId");

                    b.HasIndex("YearId");

                    b.ToTable("Sections");
                });

            modelBuilder.Entity("LMS_Demo.Models.Student", b =>
                {
                    b.Property<int>("SysId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<int?>("DepartmentID")
                        .HasColumnType("int");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("FacilitatorSysId")
                        .HasColumnType("int");

                    b.Property<string>("FirstName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FullName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("IsDeleted")
                        .HasColumnType("int");

                    b.Property<string>("LastName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Phone")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Photo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("Role")
                        .HasColumnType("int");

                    b.Property<int?>("SectionID")
                        .HasColumnType("int");

                    b.Property<string>("UserName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("YearID")
                        .HasColumnType("int");

                    b.HasKey("SysId");

                    b.HasIndex("DepartmentID");

                    b.HasIndex("FacilitatorSysId");

                    b.HasIndex("SectionID");

                    b.HasIndex("YearID");

                    b.ToTable("Students");
                });

            modelBuilder.Entity("LMS_Demo.Models.SubmitAssignment", b =>
                {
                    b.Property<int>("SysId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("AssesmentId")
                        .HasColumnType("int");

                    b.Property<string>("FilePath")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("StudentId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("SubmissionDate")
                        .HasColumnType("datetime2");

                    b.HasKey("SysId");

                    b.HasIndex("AssesmentId");

                    b.HasIndex("StudentId");

                    b.ToTable("SubmitAssignments");
                });

            modelBuilder.Entity("LMS_Demo.Models.Teach", b =>
                {
                    b.Property<int>("SysId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("CourseId")
                        .HasColumnType("int");

                    b.Property<int?>("DepartmentId")
                        .HasColumnType("int");

                    b.Property<int?>("FacilitatorSysId")
                        .HasColumnType("int");

                    b.Property<int?>("SectionId")
                        .HasColumnType("int");

                    b.Property<int?>("TeacherId")
                        .HasColumnType("int");

                    b.Property<int?>("YearId")
                        .HasColumnType("int");

                    b.HasKey("SysId");

                    b.HasIndex("CourseId");

                    b.HasIndex("DepartmentId");

                    b.HasIndex("FacilitatorSysId");

                    b.HasIndex("SectionId");

                    b.HasIndex("YearId");

                    b.ToTable("Teaches");
                });

            modelBuilder.Entity("LMS_Demo.Models.Year", b =>
                {
                    b.Property<int>("SysId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<int?>("IsDeleted")
                        .HasColumnType("int");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("SysId");

                    b.ToTable("Years");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRole", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasDatabaseName("RoleNameIndex")
                        .HasFilter("[NormalizedName] IS NOT NULL");

                    b.ToTable("AspNetRoles");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RoleId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetRoleClaims");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserClaims");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("ProviderKey")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserLogins");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("RoleId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetUserRoles");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("LoginProvider")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("Name")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("AspNetUserTokens");
                });

            modelBuilder.Entity("LMS_Demo.Models.Account", b =>
                {
                    b.HasOne("LMS_Demo.Models.Facilitator", "Teacher")
                        .WithMany("Accounts")
                        .HasForeignKey("FacilitatorID");

                    b.HasOne("LMS_Demo.Models.Student", "Student")
                        .WithMany("Accounts")
                        .HasForeignKey("StudentID");

                    b.Navigation("Student");

                    b.Navigation("Teacher");
                });

            modelBuilder.Entity("LMS_Demo.Models.Assesment", b =>
                {
                    b.HasOne("LMS_Demo.Models.AssesmentType", "AssesmentType")
                        .WithMany("Assesments")
                        .HasForeignKey("AssesmentTypeSysId");

                    b.HasOne("LMS_Demo.Models.Course", "Course")
                        .WithMany("Assesments")
                        .HasForeignKey("CourseID");

                    b.HasOne("LMS_Demo.Models.Department", "Department")
                        .WithMany("Assesments")
                        .HasForeignKey("DepartmentID");

                    b.HasOne("LMS_Demo.Models.Facilitator", "Facilitator")
                        .WithMany("Assesments")
                        .HasForeignKey("FacilitatorSysId");

                    b.HasOne("LMS_Demo.Models.Section", "Section")
                        .WithMany("Assesments")
                        .HasForeignKey("SectionID");

                    b.HasOne("LMS_Demo.Models.Year", "Year")
                        .WithMany("Assesments")
                        .HasForeignKey("YearID");

                    b.Navigation("AssesmentType");

                    b.Navigation("Course");

                    b.Navigation("Department");

                    b.Navigation("Facilitator");

                    b.Navigation("Section");

                    b.Navigation("Year");
                });

            modelBuilder.Entity("LMS_Demo.Models.Course", b =>
                {
                    b.HasOne("LMS_Demo.Models.Department", "Department")
                        .WithMany("Courses")
                        .HasForeignKey("DepartmentID");

                    b.HasOne("LMS_Demo.Models.Facilitator", "Facilitator")
                        .WithMany("Courses")
                        .HasForeignKey("FacilitatorSysId");

                    b.HasOne("LMS_Demo.Models.Year", "Year")
                        .WithMany("Courses")
                        .HasForeignKey("YearId");

                    b.Navigation("Department");

                    b.Navigation("Facilitator");

                    b.Navigation("Year");
                });

            modelBuilder.Entity("LMS_Demo.Models.Message", b =>
                {
                    b.HasOne("LMS_Demo.Models.Facilitator", "Facilitator")
                        .WithMany("Messages")
                        .HasForeignKey("FacilitatorSysId");

                    b.HasOne("LMS_Demo.Models.Student", "Student")
                        .WithMany("Messages")
                        .HasForeignKey("StudentSysId");

                    b.Navigation("Facilitator");

                    b.Navigation("Student");
                });

            modelBuilder.Entity("LMS_Demo.Models.Result", b =>
                {
                    b.HasOne("LMS_Demo.Models.Assesment", "Assesment")
                        .WithMany("Results")
                        .HasForeignKey("AssesmentSysId");

                    b.HasOne("LMS_Demo.Models.Facilitator", "Facilitator")
                        .WithMany("Results")
                        .HasForeignKey("FacilitatorSysId");

                    b.HasOne("LMS_Demo.Models.Student", "Student")
                        .WithMany("Results")
                        .HasForeignKey("StudentID");

                    b.Navigation("Assesment");

                    b.Navigation("Facilitator");

                    b.Navigation("Student");
                });

            modelBuilder.Entity("LMS_Demo.Models.Section", b =>
                {
                    b.HasOne("LMS_Demo.Models.Year", "Year")
                        .WithMany("Sections")
                        .HasForeignKey("YearId");

                    b.Navigation("Year");
                });

            modelBuilder.Entity("LMS_Demo.Models.Student", b =>
                {
                    b.HasOne("LMS_Demo.Models.Department", "Department")
                        .WithMany("Students")
                        .HasForeignKey("DepartmentID");

                    b.HasOne("LMS_Demo.Models.Facilitator", "Facilitator")
                        .WithMany("Students")
                        .HasForeignKey("FacilitatorSysId");

                    b.HasOne("LMS_Demo.Models.Section", "Section")
                        .WithMany("Students")
                        .HasForeignKey("SectionID");

                    b.HasOne("LMS_Demo.Models.Year", "Year")
                        .WithMany("Students")
                        .HasForeignKey("YearID");

                    b.Navigation("Department");

                    b.Navigation("Facilitator");

                    b.Navigation("Section");

                    b.Navigation("Year");
                });

            modelBuilder.Entity("LMS_Demo.Models.SubmitAssignment", b =>
                {
                    b.HasOne("LMS_Demo.Models.Assesment", "Assesment")
                        .WithMany("SubmitAssignments")
                        .HasForeignKey("AssesmentId");

                    b.HasOne("LMS_Demo.Models.Student", "Student")
                        .WithMany("SubmitAssignments")
                        .HasForeignKey("StudentId");

                    b.Navigation("Assesment");

                    b.Navigation("Student");
                });

            modelBuilder.Entity("LMS_Demo.Models.Teach", b =>
                {
                    b.HasOne("LMS_Demo.Models.Course", "Course")
                        .WithMany("Teaches")
                        .HasForeignKey("CourseId");

                    b.HasOne("LMS_Demo.Models.Department", "Department")
                        .WithMany("Teaches")
                        .HasForeignKey("DepartmentId");

                    b.HasOne("LMS_Demo.Models.Facilitator", "Facilitator")
                        .WithMany("Teaches")
                        .HasForeignKey("FacilitatorSysId");

                    b.HasOne("LMS_Demo.Models.Section", "Section")
                        .WithMany("Teaches")
                        .HasForeignKey("SectionId");

                    b.HasOne("LMS_Demo.Models.Year", "Year")
                        .WithMany("Teaches")
                        .HasForeignKey("YearId");

                    b.Navigation("Course");

                    b.Navigation("Department");

                    b.Navigation("Facilitator");

                    b.Navigation("Section");

                    b.Navigation("Year");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.HasOne("LMS_Demo.Data.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.HasOne("LMS_Demo.Data.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("LMS_Demo.Data.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.HasOne("LMS_Demo.Data.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("LMS_Demo.Models.Assesment", b =>
                {
                    b.Navigation("Results");

                    b.Navigation("SubmitAssignments");
                });

            modelBuilder.Entity("LMS_Demo.Models.AssesmentType", b =>
                {
                    b.Navigation("Assesments");
                });

            modelBuilder.Entity("LMS_Demo.Models.Course", b =>
                {
                    b.Navigation("Assesments");

                    b.Navigation("Teaches");
                });

            modelBuilder.Entity("LMS_Demo.Models.Department", b =>
                {
                    b.Navigation("Assesments");

                    b.Navigation("Courses");

                    b.Navigation("Students");

                    b.Navigation("Teaches");
                });

            modelBuilder.Entity("LMS_Demo.Models.Facilitator", b =>
                {
                    b.Navigation("Accounts");

                    b.Navigation("Assesments");

                    b.Navigation("Courses");

                    b.Navigation("Messages");

                    b.Navigation("Results");

                    b.Navigation("Students");

                    b.Navigation("Teaches");
                });

            modelBuilder.Entity("LMS_Demo.Models.Section", b =>
                {
                    b.Navigation("Assesments");

                    b.Navigation("Students");

                    b.Navigation("Teaches");
                });

            modelBuilder.Entity("LMS_Demo.Models.Student", b =>
                {
                    b.Navigation("Accounts");

                    b.Navigation("Messages");

                    b.Navigation("Results");

                    b.Navigation("SubmitAssignments");
                });

            modelBuilder.Entity("LMS_Demo.Models.Year", b =>
                {
                    b.Navigation("Assesments");

                    b.Navigation("Courses");

                    b.Navigation("Sections");

                    b.Navigation("Students");

                    b.Navigation("Teaches");
                });
#pragma warning restore 612, 618
        }
    }
}
